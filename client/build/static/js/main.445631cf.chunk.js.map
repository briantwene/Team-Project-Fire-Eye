{"version":3,"sources":["components/SidebarData.js","components/Sidebar.jsx","components/Loading.js","ProtectedRoute.js","components/login.js","components/Board.js","pages/FileInfo.js","components/icons.js","components/FileItem.js","pages/Explorer.js","pages/Logout.js","pages/Upload.js","App.js","reportWebVitals.js","index.js"],"names":["SidebarData","title","path","icon","cName","Sidebar","useState","navbar","setnavbar","shownavbar","Provider","value","color","className","to","onClick","map","item","index","Loading","ProtectedRoute","auth","setAuth","isLoading","setIsLoading","checkIsAuth","a","axios","get","res","console","log","useEffect","Login","navigate","useNavigate","username","setUsername","password","setPassword","loginStatus","setLoginStatus","type","onChange","e","target","preventDefault","Axios","post","then","response","data","catch","message","Board","FileInfo","file","setModal","name","Date","details","time","toLocaleDateString","bytes","size","params","filePath","responseType","saveAs","download","iconMap","aac","aep","ai","aif","aiff","avi","bin","bmp","c","cpp","cs","css","csv","doc","docx","eot","exe","flac","flv","fnt","gif","gz","htm","html","ini","java","jpeg","jpg","js","json","jsx","m4a","m4v","md","mkv","mov","mp3","mp4","mpeg","mpg","ogg","ogv","pdf","php","png","ppt","pptx","py","rar","scss","svg","tar","ts","wav","webm","wmv","xls","xlsx","yml","zip","zipx","other","FileItem","set","open","ExplorerCrumbs","splitPath","split","filter","p","paths","folder","fullPath","slice","join","ExplorerNode","node","setfunc","filesVisible","setFileVisiblity","hasChild","files","b","isFolderBoolean","Explorer","props","setFiles","directory","currentView","setCurrentView","contents","setContents","isOpen","fileModal","setFileModal","setView","fetchPage","pageContents","error","passedPath","filesInFolder","key","Logout","logout","require","Upload","selectedFile","setSelectedFile","isFilePicked","setIsFilePicked","uploadStatus","setUploadStatus","event","ModifiedDate","formData","FormData","append","fetch","method","body","result","success","App","isAuth","element","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.445631cf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport * as AiIcons from \"react-icons/ai\";\r\nimport * as MdIcons from \"react-icons/md\";\r\n\r\nimport * as FiIcons from \"react-icons/fi\";\r\n\r\nexport const SidebarData = [\r\n  {\r\n    title: \"Home\",\r\n    path: \"/\",\r\n    icon: <AiIcons.AiFillHome />,\r\n    cName: \"nav-text\",\r\n  },\r\n  // {\r\n  //   title: \"Explorer\",\r\n  //   path: \"/explorer\",\r\n  //   icon: <AiIcons.AiFillEye />,\r\n  //   cName: \"nav-text\",\r\n  // },\r\n  // {\r\n  //   title: \"Gallery\",\r\n  //   path: \"/gallery\",\r\n  //   icon: <MdIcons.MdOutlineMonochromePhotos />,\r\n\r\n  //   cName: \"nav-text\",\r\n  // },\r\n  // {\r\n  //   title: \"Settings\",\r\n  //   path: \"/settings\",\r\n  //   icon: <FiIcons.FiSettings />,\r\n  //   cName: \"nav-text\",\r\n  // },\r\n\r\n  {\r\n    title: \"Upload\",\r\n    path: \"/upload\",\r\n    icon: <AiIcons.AiOutlineCloudUpload />,\r\n    cName: \"nav-text\",\r\n  },\r\n\r\n  {\r\n    title: \"Logout\",\r\n    path: \"/logout\",\r\n    icon: <FiIcons.FiLogOut />,\r\n    cName: \"nav-text\",\r\n  },\r\n];\r\n","import React, {useState} from 'react';\r\n//Creates states that can be passed in components\r\nimport *as FaIcons from \"react-icons/fa\";\r\nimport *as AiIcons from \"react-icons/ai\";\r\nimport { Link } from \"react-router-dom\"\r\nimport {SidebarData} from './SidebarData'\r\nimport { IconContext } from 'react-icons'\r\n\r\n\r\nfunction Sidebar() {\r\n  const[navbar, setnavbar] = useState(false)\r\n\r\n  const shownavbar = () => setnavbar(!navbar)\r\n\r\n  return (\r\n\r\n    <>\r\n  \r\n    <IconContext.Provider value={{color: '#fff'}}>\r\n      <div className=\"Sidebar\">\r\n        <div className='username'>\r\n        <h1></h1>\r\n        </div>\r\n        \r\n      <Link to=\"#\" className='menu-bars'>\r\n        <FaIcons.FaBars  onClick={shownavbar} />\r\n      </Link>\r\n\r\n      </div>\r\n      {/* state hooks. If icon is clicked we want class to nav menu. Which is showing */}\r\n\r\n\r\n    <nav className ={navbar ? 'nav-menu active': 'nav-menu'}>\r\n\r\n      <ul className='nav-menu-items' onClick={shownavbar} >\r\n        <li className='navbar-toggle'>\r\n          <Link to =\"#\" className='menu-bars'>\r\n          <AiIcons.AiOutlineClose />\r\n          </Link>\r\n        </li>\r\n\r\n        {SidebarData.map((item, index) => {\r\n\r\n          return(\r\n            <li key={index} className={item.cName}>\r\n              <Link to={item.path}>\r\n                {item.icon}\r\n                <span className='sidebar_item_title'>{item.title}</span>\r\n              </Link>\r\n\r\n            </li> \r\n\r\n          )\r\n\r\n        })}\r\n\r\n    \r\n      </ul>\r\n\r\n\r\n    </nav>\r\n    </IconContext.Provider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\nfunction Loading() {\r\n  return <div>Loading</div>;\r\n}\r\n\r\nexport default Loading;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Loading from \"./components/Loading\";\r\n\r\nconst ProtectedRoute = () => {\r\n  //creating state variables for if the user is authenticated and if\r\n  //the component is loading\r\n  //some flags here I be creating\r\n  const [auth, setAuth] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  //function for checking if the user is authenticated\r\n  const checkIsAuth = async () => {\r\n    //send server get request with the cookie\r\n    try {\r\n      //if there is a response then the cookie is valid\r\n      const res = await axios.get(\"user/isauth\");\r\n      console.log(res);\r\n      //set auth flag to true\r\n      setAuth(true);\r\n      //if there is an error then the cookie is invalid\r\n    } catch (error) {\r\n      console.log(error);\r\n      //set auth flag to false\r\n      setAuth(false);\r\n    }\r\n    //set the is loading flag to false\r\n    setIsLoading(false);\r\n  };\r\n\r\n  //using useeffect to check if the user is authenticated\r\n  useEffect(() => {\r\n    checkIsAuth();\r\n    return () => {};\r\n  }, []);\r\n\r\n  //if the isLoading flag is true\r\n  if (isLoading) {\r\n    //render a loading component until the user is validated\r\n    return <Loading />;\r\n  }\r\n\r\n  //if the auth flag is true\r\n  //render the sidebar and the component in the route selected\r\n  return auth ? (\r\n    <>\r\n      <Sidebar />\r\n      <Outlet />\r\n    </>\r\n  ) : (\r\n    //OR send them back to the login page....\r\n    <Navigate to=\"/login\" />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Login() {\r\n  //setting state for user credentials and login error message\r\n  const navigate = useNavigate();\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [loginStatus, setLoginStatus] = useState(\"\");\r\n\r\n  // function for logging the user in when the form is submitted\r\n  const login = () => {\r\n    //send http post request, submitting the credentials to the backend\r\n    Axios.post(\"/auth/user\", { username: username, password: password })\r\n      .then((response) => {\r\n        //code will go to then if the response is 200 OK\r\n        console.log(response);\r\n        //if there is data in the body of the response\r\n        if (response.data) {\r\n          //set the login status\r\n          setLoginStatus(response.data);\r\n          //and naviaget the user to the dashboard\r\n          navigate(\"/\");\r\n        }\r\n      }) //if there is an error, tell the user at the bottom if the login page\r\n      .catch(({ response }) => {\r\n        console.log(response);\r\n        setLoginStatus(response.data.message);\r\n      });\r\n  };\r\n  return (\r\n    //login form\r\n    <div className=\"login-container\">\r\n      <div className=\"logo-container\">\r\n        <span className=\"logo-text\">F I R E E Y E</span>\r\n      </div>\r\n      <form className=\"login-form\">\r\n        <div className=\"login-title\">\r\n          <h1>Login</h1>\r\n        </div>\r\n        <span>Login with the data you entered during your registration</span>\r\n\r\n        <div className=\"form-field\">\r\n          <p className=\"label\">Username</p>\r\n\r\n          <input\r\n            type=\"text\"\r\n            className=\"field\"\r\n            onChange={(e) => {\r\n              console.log(e);\r\n              setUsername(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-field\">\r\n          <p className=\"label\">password</p>\r\n          <input type=\"password\" className=\"field\" onChange={(e) => setPassword(e.target.value)} />\r\n        </div>\r\n\r\n        <div>\r\n          <button\r\n            className=\"login-btn\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              login(username, password);\r\n            }}\r\n          >\r\n            Login\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <div className=\"login-status\">\r\n        <span>{loginStatus}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\n\r\n//this is here for testing the nested routes in livestream....\r\nfunction Board() {\r\n  return <div>Board</div>;\r\n}\r\n\r\nexport default Board;\r\n","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { saveAs } from \"file-saver\";\r\nimport bytes from \"bytes\";\r\nimport * as FaIcons from \"react-icons/fa\";\r\n\r\nfunction FileInfo({ file, setModal }) {\r\n  const download = (file = \"\", name = \"\", type = \"\") => {\r\n    axios\r\n      .get(\"/nas/download\", {\r\n        params: {\r\n          filePath: file,\r\n        },\r\n        responseType: \"blob\",\r\n      })\r\n      .then(({ data }) => {\r\n        saveAs(data, `${name}.${type}`);\r\n      });\r\n  };\r\n  return (\r\n    <div\r\n      className=\"fileInfo-container\"\r\n      onClick={() => {\r\n        setModal();\r\n      }}\r\n    >\r\n      <div className=\"fileInfo\">\r\n        <table>\r\n          <tr>\r\n            <th>Name:</th>\r\n\r\n            <td>{file.name}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Full Path:</th>\r\n\r\n            <td>{file.path}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Date Modified:</th>\r\n\r\n            <td>{new Date(file.details.time).toLocaleDateString}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Size:</th>\r\n            <td>{bytes(file.details.size)}</td>\r\n          </tr>\r\n          <tr>\r\n            <th>Type:</th>\r\n            <td>.{file.details.type}</td>\r\n          </tr>\r\n        </table>\r\n        <button\r\n          className=\"download\"\r\n          onClick={() => {\r\n            download(file.path, file.name, file.details.type);\r\n          }}\r\n        >\r\n          Download\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileInfo;\r\n","import * as FaIcons from \"react-icons/fa\";\r\nimport * as SiIcons from \"react-icons/si\";\r\nexport const iconMap = {\r\n  \"3gp\": <FaIcons.FaFileAudio />,\r\n  \"7zip\": <FaIcons.FaFileArchive />,\r\n  aac: <FaIcons.FaFileAudio />,\r\n  aep: <SiIcons.SiAdobeaftereffects />,\r\n  ai: <SiIcons.SiAdobeillustrator />,\r\n  aif: <FaIcons.FaFileAudio />,\r\n  aiff: <FaIcons.FaFileAudio />,\r\n  avi: <FaIcons.FaFileVideo />,\r\n  bin: <FaIcons.FaFileAlt />,\r\n  bmp: <FaIcons.FaFileImage />,\r\n  c: <FaIcons.FaFileCode />,\r\n  cpp: <FaIcons.FaFileCode />,\r\n  cs: <FaIcons.FaFileCode />,\r\n  css: <FaIcons.FaCss3 />,\r\n  csv: <FaIcons.FaFileExcel />,\r\n  doc: <FaIcons.FaFileWord />,\r\n  docx: <FaIcons.FaFileWord />,\r\n  eot: <FaIcons.FaFileAlt />,\r\n  exe: <FaIcons.FaFileAlt />,\r\n  flac: <FaIcons.FaFileAudio />,\r\n  flv: <FaIcons.FaFileVideo />,\r\n  fnt: <FaIcons.FaFileAlt />,\r\n  gif: <FaIcons.FaFileImage />,\r\n  gz: <FaIcons.FaArchive />,\r\n  htm: <FaIcons.FaHtml5 />,\r\n  html: <FaIcons.FaHtml5 />,\r\n  ini: <FaIcons.FaFileAlt />,\r\n  java: <FaIcons.FaJava />,\r\n  jpeg: <FaIcons.FaFileImage />,\r\n  jpg: <FaIcons.FaFileImage />,\r\n  js: <FaIcons.FaJs />,\r\n  json: <FaIcons.FaCode />,\r\n  jsx: <FaIcons.FaReact />,\r\n  m4a: <FaIcons.FaFileAudio />,\r\n  m4v: <FaIcons.FaFileVideo />,\r\n  md: <FaIcons.FaMarkdown />,\r\n  mkv: <FaIcons.FaFileVideo />,\r\n  mov: <FaIcons.FaFileVideo />,\r\n  mp3: <FaIcons.FaFileAudio />,\r\n  mp4: <FaIcons.FaFileVideo />,\r\n  mpeg: <FaIcons.FaFileVideo />,\r\n  mpg: <FaIcons.FaFileVideo />,\r\n  ogg: <FaIcons.FaFileAudio />,\r\n  ogv: <FaIcons.FaFileVideo />,\r\n  pdf: <FaIcons.FaFilePdf />,\r\n  php: <FaIcons.FaPhp />,\r\n  png: <FaIcons.FaFileImage />,\r\n  ppt: <FaIcons.FaFilePowerpoint />,\r\n  pptx: <FaIcons.FaFilePowerpoint />,\r\n  py: <FaIcons.FaPython />,\r\n  rar: <FaIcons.FaFileArchive />,\r\n  scss: <FaIcons.FaSass />,\r\n  svg: <FaIcons.FaFileImage />,\r\n  tar: <FaIcons.FaFileImage />,\r\n  ts: <SiIcons.SiTypescript />,\r\n  wav: <FaIcons.FaFileVideo />,\r\n  webm: <FaIcons.FaFileVideo />,\r\n  wmv: <FaIcons.FaFileVideo />,\r\n  xls: <FaIcons.FaFileExcel />,\r\n  xlsx: <FaIcons.FaFileExcel />,\r\n  yml: <FaIcons.FaFileCode />,\r\n  zip: <FaIcons.FaFileArchive />,\r\n  zipx: <FaIcons.FaFileArchive />,\r\n  other: <FaIcons.FaFileAlt />,\r\n};\r\n","import React from \"react\";\r\nimport { FileIcon, defaultStyles } from \"react-file-icon\";\r\nimport * as FcIcons from \"react-icons/fc\";\r\nimport { iconMap } from \"./icons\";\r\n\r\nfunction FileItem({ file, set, open }) {\r\n  return (\r\n    <div className=\"fileItem\">\r\n      {file.details.type !== \"Folder\" ? (\r\n        <div className=\"fileIcon\" onClick={() => open(file)}>\r\n          {iconMap[file.details.type in iconMap ? file.details.type : \"other\"]}\r\n        </div>\r\n      ) : (\r\n        <div\r\n          className=\"fileIcon\"\r\n          onClick={(e) => {\r\n            set(file.path);\r\n          }}\r\n        >\r\n          <FcIcons.FcFolder />\r\n        </div>\r\n      )}\r\n\r\n      <span className=\"filename\">{file.name}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FileItem;\r\n","import axios from \"axios\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Routes, Route, useParams, Link, Navigate, Outlet, useMatch } from \"react-router-dom\";\r\nimport Board from \"../components/Board\";\r\nimport { files } from \"../components/foldertree\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport Loading from \"../components/Loading\";\r\nimport FileInfo from \"./FileInfo\";\r\nimport { FileIcon, defaultStyles } from \"react-file-icon\";\r\nimport FileItem from \"../components/FileItem\";\r\nimport * as FcIcons from \"react-icons/fc\";\r\n\r\n//the explorer component as a while\r\nfunction Explorer(props) {\r\n  //setting local state for the files..\r\n  //getting the directory from main.\r\n  const [files, setFiles] = useState(props.files || []);\r\n  const [currentView, setCurrentView] = useState(props.directory);\r\n  const [contents, setContents] = useState([]);\r\n  const [fileModal, setFileModal] = useState({\r\n    file: null,\r\n    isOpen: false,\r\n  });\r\n\r\n  const open = (file) => {\r\n    setFileModal(({ isOpen }) => {\r\n      return {\r\n        file: file,\r\n        isOpen: !isOpen,\r\n      };\r\n    });\r\n  };\r\n  const setView = (path) => {\r\n    setCurrentView(path);\r\n  };\r\n\r\n  //using use effect to fetch the directory when the component is rendered\r\n\r\n  //function for calling the backend\r\n  const fetchFolders = () => {\r\n    //axios to use HTTP get request for the filesystem data\r\n    axios\r\n      .get(\"/nas/gather\", {\r\n        params: {\r\n          passedPath: props.directory,\r\n        },\r\n      })\r\n      .then((folder) => {\r\n        console.log(folder.data);\r\n        setFiles(folder.data);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  const fetchPage = () => {\r\n    axios\r\n      .get(\"/nas/changeDir\", {\r\n        params: {\r\n          folder: currentView,\r\n        },\r\n      })\r\n      .then((pageContents) => {\r\n        setContents(pageContents.data);\r\n      })\r\n      .catch((e) => {\r\n        console.error(e);\r\n      });\r\n  };\r\n\r\n  //using useEffect to fetch the data once the component has rendered\r\n  useEffect(() => {\r\n    fetchFolders();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchPage();\r\n    fetchPage();\r\n  }, [currentView]);\r\n\r\n  //rendering the tree\r\n\r\n  const filesInFolder = files;\r\n  console.log(filesInFolder);\r\n\r\n  //return a unordered list\r\n  return (\r\n    <>\r\n      <div className=\"explorer\">\r\n        <ul className=\"explorer_tree\">\r\n          {/* if state has the file data inside the rendere the following: */}\r\n          {filesInFolder &&\r\n            //create an array with a explorer_node component from the state array\r\n            filesInFolder.map((file, key) => {\r\n              return file.isFolderBoolean && <ExplorerNode key={key} node={file} setfunc={setView} />;\r\n            })}\r\n        </ul>\r\n        <div className=\"view-grid-outer\">\r\n          <div className=\"cd-info\">\r\n            <ExplorerCrumbs path={currentView} set={setView} />\r\n          </div>\r\n\r\n          <div className=\"view-grid-inner\">\r\n            {contents &&\r\n              contents.map((file, key) => {\r\n                return <FileItem key={key} file={file} set={setView} open={open} />;\r\n              })}\r\n          </div>\r\n        </div>\r\n        {fileModal.isOpen && (\r\n          <>\r\n            <FileInfo file={fileModal.file} setModal={open} />\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\n//will be used for viewing the contents of each file\r\nfunction Explorer_View({ view }) {\r\n  return <div className=\"explorer-view\">{view}</div>;\r\n}\r\n\r\nconst ExplorerCrumbs = ({ path, set }) => {\r\n  const splitPath = path.split(\"/\").filter((p) => p);\r\n\r\n  const paths = splitPath.map((folder, index) => {\r\n    return {\r\n      folder: folder,\r\n      fullPath: splitPath.slice(0, index + 1).join(\"/\"),\r\n    };\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {paths.map((path, index) => {\r\n        return (\r\n          <>\r\n            {index === 0 ? null : <div> {\">\"} </div>}\r\n\r\n            <div className=\"pathCrumb\" onClick={() => set(path.fullPath)}>\r\n              {path.folder}\r\n            </div>\r\n          </>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\n//function for rendering the directory tree\r\nfunction ExplorerNode({ node, setfunc }) {\r\n  //create a state variable that acts as a flag for weather the sub folder is visible\r\n  const [filesVisible, setFileVisiblity] = useState(false);\r\n  console.log(setfunc);\r\n  //check if the node prop has files inside its folder\r\n  const hasChild = node.files ? true : false;\r\n\r\n  return (\r\n    //return a list ite,\r\n    <li className=\"sublist\">\r\n      {/* when the div with the arrow is clicked toggle the visiblity */}\r\n      <div\r\n        className=\"subfolder\"\r\n        onClick={(e) => {\r\n          setFileVisiblity((b) => !b);\r\n          setfunc(node.filePath);\r\n        }}\r\n      >\r\n        {/* if the folder has files in it then change to active state */}\r\n        {hasChild && <div className={filesVisible ? \"active\" : \"\"}> &gt; </div>}\r\n        <div className=\"folderName\">\r\n          <FcIcons.FcFolder /> <span className=\"folderName-text\"> {node.name}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* if there is files in that folder AND the file is visible in the tree\r\n      interate over the items in that folder and only display the folder in the tree */}\r\n      {hasChild && filesVisible && (\r\n        <div className=\"subtree-container\">\r\n          <ul className=\"subtree\">\r\n            {node.files.map((file) => {\r\n              return file.isFolderBoolean && <ExplorerNode node={file} setfunc={setfunc} />;\r\n            })}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Explorer;\r\n","import axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Logout() {\r\n  //set up naviagte function that will be used to redirect the user\r\n  const navigate = useNavigate();\r\n\r\n  //logout function\r\n  const logout = async () => {\r\n    //sent request to server to delete the cookie\r\n    const loggedOut = await axios.post(\"/auth/logout\");\r\n    //if there is a response\r\n    if (loggedOut) {\r\n      //navigate to the user to the login page\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n  //using useEffect to run the logout function\r\n  //when the page is loaded\r\n  useEffect(() => logout());\r\n  return (\r\n    <div className=\"logout\">\r\n      <h1>Logging Out</h1>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logout;\r\n","// import { response } from \"express\";\r\nimport React, { useState } from \"react\";\r\nconst bytes = require(\"bytes\");\r\n\r\nfunction Upload() {\r\n  const [selectedFile, setSelectedFile] = useState();\r\n  const [isFilePicked, setIsFilePicked] = useState(false);\r\n  const [uploadStatus, setUploadStatus] = useState(\"\");\r\n\r\n  const changeHandler = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n    console.log(event.target.files);\r\n    setIsFilePicked(true);\r\n  };\r\n\r\n  const handleSUbmission = () => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", selectedFile);\r\n\r\n    fetch(\"/nas/upload\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    })\r\n      .then((response) => response.json())\r\n      .then((result) => {\r\n        console.log(\"Success:\", result);\r\n        setUploadStatus(result.success);\r\n      })\r\n      .catch((e) => {\r\n        console.log(`there was an error: ${e}`);\r\n      });\r\n\r\n    // .catch((error)) => {\r\n    //   console.error('Error:', error);\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input type=\"file\" name=\"file\" onChange={changeHandler} />\r\n      {isFilePicked ? (\r\n        <div>\r\n          <p>Filename: {selectedFile.name}</p>\r\n          <p>Filetype: {selectedFile.type}</p>\r\n          <p>Size in bytes: {bytes(selectedFile.size)}</p>\r\n\r\n          <p>lastModifiedDate: {selectedFile.ModifiedDate}</p>\r\n        </div>\r\n      ) : (\r\n        <p>Select a file to show details</p>\r\n      )}\r\n      <div>\r\n        <button onClick={handleSUbmission}>Submit</button>\r\n      </div>\r\n      <div>{uploadStatus}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","import React, { useState } from \"react\";\r\nimport \"./css/App.css\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport ProtectedRoute from \"./ProtectedRoute\";\r\nimport { Routes, Route, useNavigate, Navigate } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Login from \"./components/login\";\r\nimport Explorer from \"./pages/Explorer\";\r\nimport Gallery from \"./pages/Gallery\";\r\nimport Setting from \"./pages/Settings\";\r\nimport Logout from \"./pages/Logout\";\r\nimport Upload from \"./pages/Upload\";\r\nimport { Axios } from \"axios\";\r\nimport FolderGenerator from \"./pages/Explorer\";\r\nimport { files } from \"./components/foldertree\";\r\n\r\nconst directory = \"\\\\\\\\172.20.10.6\\\\nas\";\r\nfunction App() {\r\n  //using useState for the token for auth\r\n  const [isAuth, setIsAuth] = useState(true);\r\n  const [loginStatus, setLoginStatus] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const logout = () => {\r\n    setIsAuth(false);\r\n    navigate(\"/login\");\r\n  };\r\n  return (\r\n    <>\r\n      {/* <Sidebar />\r\n      <Routes>\r\n        <Route path=\"/\" exact element={<Home />} />\r\n        <Route path=\"/explorer\" element={<Explorer directory={directory} />} />\r\n        <Route path=\"/gallery\" element={<Gallery />} />\r\n\r\n        <Route path=\"/upload\" element={<Upload />} />\r\n        <Route path=\"/settings\" element={<Setting />} />\r\n        <Route path=\"/upload\" element={<Upload />} />\r\n        <Route path=\"/logout\" element={<Logout />} />\r\n      </Routes> */}\r\n\r\n      {/* This will most likely be the new Routes\r\n      If you want to remove the login page you can comment this block and uncomment the top one... */}\r\n      <Routes>\r\n        <Route path=\"/login\" element={<Login />} exact />\r\n        <Route element={<ProtectedRoute auth={isAuth} />}>\r\n          <Route path=\"/\" element={<Explorer directory={directory} />} />\r\n          <Route path=\"/logout\" element={<Logout />} />\r\n          <Route path=\"/upload\" element={<Upload />} />\r\n        </Route>\r\n      </Routes>\r\n\r\n      {/* if you want to see the login uncomment this line and comment all the stuff in the Router Tag */}\r\n      {/* <Login /> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}